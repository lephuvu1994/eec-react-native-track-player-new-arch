
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "RNTPMusicModuleSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setupPlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setupPlayer", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_updateOptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "updateOptions", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_play(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "play", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_pause(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pause", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_stop(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "stop", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_reset(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "reset", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_retry(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "retry", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_skip(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "skip", "(DLjava/lang/Double;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_skipToNext(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "skipToNext", "(Ljava/lang/Double;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_skipToPrevious(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "skipToPrevious", "(Ljava/lang/Double;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_seekTo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "seekTo", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_seekBy(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "seekBy", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setRate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setRate", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_add(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "add", "(Lcom/facebook/react/bridge/ReadableArray;Ljava/lang/Double;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_load(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "load", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_move(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "move", "(DDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_remove(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "remove", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setQueue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setQueue", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setPlayWhenReady(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setPlayWhenReady", "(ZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getPlayWhenReady(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPlayWhenReady", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_updateMetadataForTrack(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "updateMetadataForTrack", "(DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_updateNowPlayingMetadata(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "updateNowPlayingMetadata", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_clearNowPlayingMetadata(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "clearNowPlayingMetadata", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_removeUpcomingTracks(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "removeUpcomingTracks", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getTrack(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getTrack", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getQueue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getQueue", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrackIndex(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getActiveTrackIndex", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrack(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getActiveTrack", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getProgress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getProgress", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getPlaybackState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPlaybackState", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getRate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getRate", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getDuration(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getDuration", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getPosition(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPosition", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getBufferedPosition(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getBufferedPosition", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_isServiceRunning(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "isServiceRunning", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setRepeatMode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setRepeatMode", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getRepeatMode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getRepeatMode", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setVolume(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setVolume", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getVolume(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getVolume", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
}

NativeTPMusicModuleSpecJSI::NativeTPMusicModuleSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getConstants};
  methodMap_["setupPlayer"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setupPlayer};
  methodMap_["updateOptions"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_updateOptions};
  methodMap_["play"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_play};
  methodMap_["pause"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_pause};
  methodMap_["stop"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_stop};
  methodMap_["reset"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_reset};
  methodMap_["retry"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_retry};
  methodMap_["skip"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_skip};
  methodMap_["skipToNext"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_skipToNext};
  methodMap_["skipToPrevious"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_skipToPrevious};
  methodMap_["seekTo"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_seekTo};
  methodMap_["seekBy"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_seekBy};
  methodMap_["setRate"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setRate};
  methodMap_["add"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_add};
  methodMap_["load"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_load};
  methodMap_["move"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_move};
  methodMap_["remove"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_remove};
  methodMap_["setQueue"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setQueue};
  methodMap_["setPlayWhenReady"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setPlayWhenReady};
  methodMap_["getPlayWhenReady"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getPlayWhenReady};
  methodMap_["updateMetadataForTrack"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_updateMetadataForTrack};
  methodMap_["updateNowPlayingMetadata"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_updateNowPlayingMetadata};
  methodMap_["clearNowPlayingMetadata"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_clearNowPlayingMetadata};
  methodMap_["removeUpcomingTracks"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_removeUpcomingTracks};
  methodMap_["getTrack"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_getTrack};
  methodMap_["getQueue"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getQueue};
  methodMap_["getActiveTrackIndex"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrackIndex};
  methodMap_["getActiveTrack"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrack};
  methodMap_["getProgress"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getProgress};
  methodMap_["getPlaybackState"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getPlaybackState};
  methodMap_["getRate"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getRate};
  methodMap_["getDuration"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getDuration};
  methodMap_["getPosition"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getPosition};
  methodMap_["getBufferedPosition"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getBufferedPosition};
  methodMap_["isServiceRunning"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_isServiceRunning};
  methodMap_["setRepeatMode"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setRepeatMode};
  methodMap_["getRepeatMode"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getRepeatMode};
  methodMap_["setVolume"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setVolume};
  methodMap_["getVolume"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getVolume};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_addListener};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_removeListeners};
}

std::shared_ptr<TurboModule> RNTPMusicModuleSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "TPMusicModule") {
    return std::make_shared<NativeTPMusicModuleSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
