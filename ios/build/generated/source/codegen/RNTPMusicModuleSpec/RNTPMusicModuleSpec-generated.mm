/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNTPMusicModuleSpec.h"


@implementation NativeTPMusicModuleSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setupPlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setupPlayer", @selector(setupPlayer:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_updateOptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "updateOptions", @selector(updateOptions:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_play(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "play", @selector(play:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_pause(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "pause", @selector(pause:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_stop(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "stop", @selector(stop:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_reset(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "reset", @selector(reset:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_retry(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "retry", @selector(retry:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_skip(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "skip", @selector(skip:initialPosition:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_skipToNext(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "skipToNext", @selector(skipToNext:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_skipToPrevious(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "skipToPrevious", @selector(skipToPrevious:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_seekTo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "seekTo", @selector(seekTo:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_seekBy(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "seekBy", @selector(seekBy:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setRate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setRate", @selector(setRate:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_add(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "add", @selector(add:insertBeforeIndex:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_load(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "load", @selector(load:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_move(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "move", @selector(move:toIndex:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_remove(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "remove", @selector(remove:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setQueue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setQueue", @selector(setQueue:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setPlayWhenReady(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setPlayWhenReady", @selector(setPlayWhenReady:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getPlayWhenReady(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getPlayWhenReady", @selector(getPlayWhenReady:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_updateMetadataForTrack(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "updateMetadataForTrack", @selector(updateMetadataForTrack:metadata:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_updateNowPlayingMetadata(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "updateNowPlayingMetadata", @selector(updateNowPlayingMetadata:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_clearNowPlayingMetadata(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "clearNowPlayingMetadata", @selector(clearNowPlayingMetadata:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_removeUpcomingTracks(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "removeUpcomingTracks", @selector(removeUpcomingTracks:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getTrack(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getTrack", @selector(getTrack:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getQueue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getQueue", @selector(getQueue:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrackIndex(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getActiveTrackIndex", @selector(getActiveTrackIndex:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrack(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getActiveTrack", @selector(getActiveTrack:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getProgress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getProgress", @selector(getProgress:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getPlaybackState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getPlaybackState", @selector(getPlaybackState:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getRate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getRate", @selector(getRate:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getDuration(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getDuration", @selector(getDuration:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getPosition(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getPosition", @selector(getPosition:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getBufferedPosition(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getBufferedPosition", @selector(getBufferedPosition:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_isServiceRunning(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "isServiceRunning", @selector(isServiceRunning:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setRepeatMode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setRepeatMode", @selector(setRepeatMode:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getRepeatMode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getRepeatMode", @selector(getRepeatMode:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_setVolume(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setVolume", @selector(setVolume:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getVolume(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getVolume", @selector(getVolume:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "addListener", @selector(addListener:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "removeListeners", @selector(removeListeners:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTPMusicModuleSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "getConstants", @selector(getConstants), args, count);
    }

  NativeTPMusicModuleSpecJSI::NativeTPMusicModuleSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["setupPlayer"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setupPlayer};
        
        
        methodMap_["updateOptions"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_updateOptions};
        
        
        methodMap_["play"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_play};
        
        
        methodMap_["pause"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_pause};
        
        
        methodMap_["stop"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_stop};
        
        
        methodMap_["reset"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_reset};
        
        
        methodMap_["retry"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_retry};
        
        
        methodMap_["skip"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_skip};
        
        
        methodMap_["skipToNext"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_skipToNext};
        
        
        methodMap_["skipToPrevious"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_skipToPrevious};
        
        
        methodMap_["seekTo"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_seekTo};
        
        
        methodMap_["seekBy"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_seekBy};
        
        
        methodMap_["setRate"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setRate};
        
        
        methodMap_["add"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_add};
        
        
        methodMap_["load"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_load};
        
        
        methodMap_["move"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_move};
        
        
        methodMap_["remove"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_remove};
        
        
        methodMap_["setQueue"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setQueue};
        
        
        methodMap_["setPlayWhenReady"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setPlayWhenReady};
        
        
        methodMap_["getPlayWhenReady"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getPlayWhenReady};
        
        
        methodMap_["updateMetadataForTrack"] = MethodMetadata {2, __hostFunction_NativeTPMusicModuleSpecJSI_updateMetadataForTrack};
        
        
        methodMap_["updateNowPlayingMetadata"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_updateNowPlayingMetadata};
        
        
        methodMap_["clearNowPlayingMetadata"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_clearNowPlayingMetadata};
        
        
        methodMap_["removeUpcomingTracks"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_removeUpcomingTracks};
        
        
        methodMap_["getTrack"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_getTrack};
        
        
        methodMap_["getQueue"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getQueue};
        
        
        methodMap_["getActiveTrackIndex"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrackIndex};
        
        
        methodMap_["getActiveTrack"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getActiveTrack};
        
        
        methodMap_["getProgress"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getProgress};
        
        
        methodMap_["getPlaybackState"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getPlaybackState};
        
        
        methodMap_["getRate"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getRate};
        
        
        methodMap_["getDuration"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getDuration};
        
        
        methodMap_["getPosition"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getPosition};
        
        
        methodMap_["getBufferedPosition"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getBufferedPosition};
        
        
        methodMap_["isServiceRunning"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_isServiceRunning};
        
        
        methodMap_["setRepeatMode"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setRepeatMode};
        
        
        methodMap_["getRepeatMode"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getRepeatMode};
        
        
        methodMap_["setVolume"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_setVolume};
        
        
        methodMap_["getVolume"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getVolume};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeTPMusicModuleSpecJSI_removeListeners};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeTPMusicModuleSpecJSI_getConstants};
        
  }
} // namespace facebook::react
